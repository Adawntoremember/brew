#!/bin/bash

# Historically, xcrun has had various bugs, and in some cases it didn't
# work at all (e.g. CLT-only in the Xcode 4.3 era). This script emulates
# it and attempts to avoid these issues.

# These could be used in conjunction with `--sdk` which ignores SDKROOT.
# HOMEBREW_DEVELOPER_DIR, HOMEBREW_SDKROOT and HOMEBREW_PREFER_CLT_PROXIES are set by extend/ENV/super.rb
# shellcheck disable=SC2154
if [[ "$*" =~ (^| )-?-show-sdk-(path|version|build) && -n "${HOMEBREW_DEVELOPER_DIR}" ]]
then
  export DEVELOPER_DIR="${HOMEBREW_DEVELOPER_DIR}"
else
  # Some build tools set DEVELOPER_DIR, so discard it
  unset DEVELOPER_DIR
fi

if [[ -z "${SDKROOT}" && -n "${HOMEBREW_SDKROOT}" ]]
then
  export SDKROOT="${HOMEBREW_SDKROOT}"
fi

if [[ $# -eq 0 ]]
then
  exec /usr/bin/xcrun "$@"
fi

allargs=("$@")
mode="run"
log=0
while [[ $# -gt 0 ]]
do
  case "$1" in
    -show-* | --show-* | -version | --version | -h | --h | -help | --help)
      mode="show"
      break 2
      ;;
    -f | --f | -find | --find)
      mode="find"
      shift
      ;;
    -r | --r | -run | --run)
      mode="run"
      shift
      ;;
    -l | --l | -log | --log)
      log=1
      shift
      ;;
    -sdk | --sdk | -toolchain | --toolchain)
      shift
      shift
      ;;
    -*)
      shift
      ;;
    *)
      program="$1"
      shift
      postargs=("$@")
      break 2
      ;;
  esac
done

if [[ "${mode}" == "show" ]]
then
  exec /usr/bin/xcrun "${allargs[@]}"
fi

if [[ -z "${program}" ]]
then
  echo "Program name not passed." >&2
  exit 1
fi

try_exe() {
  if [[ -x "$1" ]]
  then
    if [[ "${mode}" == "find" ]]
    then
      echo "$1"
      exit 0
    else
      if [[ "${log}" == "1" ]]
      then
        echo "env" "SDKROOT=${SDKROOT}" "$1" "${postargs[@]}"
      fi
      exec "$1" "${postargs[@]}"
    fi
  fi
}

superbin="$(cd "${0%/*}" && pwd -P)"
try_exe "${superbin}/${program}"

try_exe "/usr/bin/${program}"

try_exe "$(/usr/bin/xcrun --find "${program}" 2>/dev/null)"

old_IFS="${IFS}"
IFS=':'
for path in ${PATH}
do
  if [[ "${path}" == "${superbin}" ]]
  then
    continue
  fi

  try_exe "${path}/${program}"
done
IFS="${old_IFS}"

echo >&2 "
Failed to find ${program} ${*}

Xcode and/or the CLT appear to be misconfigured. Try one or both of the following:
  xcodebuild -license
  sudo xcode-select --switch /path/to/Xcode.app
"
exit 1
